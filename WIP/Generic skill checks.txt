<!-- Getting list of skills from lib token-->
[h: rayuntrainedskills = getProperty("rayuntrainedskills")]
[h: rayskillsindexkeys = json.fields(getProperty("rayskillsindex"))]

<!-- Get selected token -->
[h: selectedToken = getSelected()]

<!-- getting String Property List with skills and their stat mods-->
[h: statModList= getProperty("raySkillStat")]

<!-- Use json object to populate drop down menu to choose which skill to check -->
[h:status=input("skill|"+rayskillsindexkeys+"|Select Skill|LIST|SELECT=0 VALUE=STRING")]
[h:abort(status)]

<!-- Rolling die and storing as variable to compare later -->
[h: dieRoll = d20]

<!-- modifying die roll for nat 1 and nat 20 -->
[h,switch(dieRoll),CODE:
case 20:
{
    [dieRoll = dieRoll +10]
    [outputOpen = "<b><font color='blue'> Nat 20! <br>"]
    [outputClose = "</b></font>"]
};
case 1:
{
    [dieRoll = dieRoll -10]
    [outputOpen = "<b><font color='red'>Nat 1! <br>"]
    [outputClose = "</b></font>"]
};
default:
{
    [outputOpen = ""]
    [outputClose = ""]
};]


<!-- Modifying Knowledge skills because the switch cases below weren't matching with the parenthesis for some reason and couldn't figure out how to make it work-->

[h: skill = replace(skill,"\\(","")]
[h: skill = replace(skill,"\\)","")]
[h: skill = replace(skill," ","")]
[h: statMod = getStrProp(statModList,skill)]
[h: statMod = getProperty(statMod,selectedToken)]


<!-- get other skill mods -->
<!-- getting a token property which contains all the setup skills with their ranks and other modifiers -->
[h: skillz = getProperty("raySkills")]
<!-- get armor check penalty -->
[h, switch(skill):
	case "Balance": acPenalty = ArmorCheckPenalty;
	case "Climb": acPenalty = ArmorCheckPenalty;
	case "EscapeArtist": acPenalty = ArmorCheckPenalty;
	case "Hide": acPenalty = ArmorCheckPenalty;
	case "Jump": acPenalty = ArmorCheckPenalty;
	case "MoveSilently": acPenalty = ArmorCheckPenalty;
	case "SleightofHand": acPenalty = ArmorCheckPenalty;
	case "Swim": acPenalty = ArmorCheckPenalty*2;
	case "Tumble": acPenalty = ArmorCheckPenalty;	
	default: acPenalty = 0
]


<!-- loop to try to find the Json object for the selected skill within the array -->
[h: rayskillsindex = getProperty("rayskillsindex")]
[h: raySkills = getProperty("raySkills")]

[h, FOREACH(object, skillz), CODE: {
	[skillName = json.get(object, "name")]
	[skillName = replace(skillName,"\\(","")]
	[skillName = replace(skillName,"\\)","")]
	[skillName = replace(skillName," ","")]
	[lower(skill)]
	[lower(skillName)]
	[if(skillName == skill): skillID = ""]
	[IF(skillName == skill): ranks = json.get(object, "rank"); ranks = 0]
	[IF(skillName == skill): racialmod = json.get(object, "racialmod"); racialmod = 0]
	[IF(skillName == skill): synergy = json.get(object, "synergy"); synergy = 0]
	[IF(skillName == skill): feats = json.get(object, "feats"); feats = 0]
	[IF(skillName == skill): equip = json.get(object, "equip"); equip = 0]
	[IF(skillName == skill): misc = json.get(object, "misc"); misc = 0]
	[IF(skillName == skill): notes = json.get(object, "notes"); notes = 0]
}]
skill: [r: skill]<br>
misc skill mod: [r: SkillMisc]<br>
stat Mod: [r:statMod]<br>
AC penalty: [r:acPenalty]<br>
ranks: [r: ranks]<br>
racialmod: [r: racialmod]<br>
synergy: [r: synergy]<br>
feats: [r: feats]<br>
equip: [r: equip]<br>
misc: [r: misc]<br>
notes: [r: notes]<br>
